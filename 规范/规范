一 html
1-初始文档
<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no">//手机版加入此行代码
    <meta name="renderer" content="webkit|ie-comp|ie-stand">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="keywords" content="">
    <meta name="description" content="">
    <title>首页</title>
</head>
<body>
    <div class="header"></div>
    <div class="main"></div>
    <div class="footer"></div>
</body>
</html>
    1.使用4个空格作为缩进 同层次标签和成对的开始结束标签应该垂直对齐
    2.标签的属性间隔使用单个空格不要使用多余的空格 头尾不需要加空格 例如<meta name="">
    3.属性的定义统一使用双引号""
    4.自闭合元素尾部不用添加"/" 例如<br> 和<meta name="">
    5.闭合标签必须包含结束标签 例如</div> </li>
    6.自定义属性使用'data_'作为开头 例如 <div data_toggle="modal"></div>
    7.HTML 属性应当按照以下给出的顺序依次排列，确保代码的易读性。
        class
        id, name
        data_*
        src, for, type, href, value
        title, alt
        role, aria_*
    <a class="..." id="..." data_toggle="modal" href="#">Example link</a>
    <input class="form_control" type="text">
    <img src="..." alt="...">
    class 用于标识高度可复用组件，因此应该排在首位。id 用于标识具体组件，应当谨慎使用（例如，页面内的书签），因此排在第二位。


2-图片添加alt属性
<img src="" alt="">

3-特殊符号 使用字符实体 http://www.w3school.com.cn/tags/html_ref_entities.html

4-非特殊情况css在head标签之前引入提高页面渲染速度

5-非特殊情况 工具型js(用来定义方法 例如jquery lodash 在head标签之前引入 方便页面内部使用)


二 css
1-统一使用UTF-8编码
2-默认字体 微软雅黑("\5FAE\8F6F\96C5\9ED1") 字体大小14px 行高1.5 颜色#333
3-书写格式
    对于只包含一条声明的样式，为了易读性和便于快速编辑，建议将语句放在同一行。对于带有多条声明的样式，还是应当将声明分为多行。
    .span1 { width: 60px; }
    /* Bad CSS */
    .selector, .selector_secondary, .selector[type=text] {
        padding:15px;
        margin:0px 0px 15px;
        background-color:rgba(0, 0, 0, 0.5);
        box-shadow:0px 1px 2px #CCC,inset 0 1px 0 #FFFFFF
    }

    /* Good CSS */
    .selector,
    .selector_secondary,
    .selector[type="text"] {
        padding: 15px;
        margin-bottom: 15px;
        background-color: rgba(0,0,0,.5);
        box-shadow: 0 1px 2px #ccc, inset 0 1px 0 #fff;
    }
    1.用4个空格来代替制表符（tab） -- 这是唯一能保证在所有环境下获得一致展现的方法。
    2.为选择器分组时，将单独的选择器单独放在一行。
    3.为了代码的易读性，在每个声明块的左花括号前添加一个空格。
    4.声明块的右花括号应当单独成行。
    5.每条声明语句的 : 后应该插入一个空格。
    6.为了获得更准确的错误报告，每条声明都应该独占一行。
    7.所有声明语句都应当以分号结尾。
    8.对于以逗号分隔的属性值，每个逗号后面都应该插入一个空格（例如，box-shadow）。
    9.不要在 rgb()、rgba()、hsl()、hsla() 或 rect() 值的内部的逗号后面插入空格。这样利于从多个属性值（既加逗号也加空格）中区分多个颜色值（只加逗号，不加空格）。
    10.对于属性值或颜色参数，省略小于 1 的小数前面的 0 （例如，.5 代替 0.5；-.5px 代替 -0.5px）。
    11.十六进制值应该全部小写，例如，#fff。在扫描文档时，小写字符易于分辨，因为他们的形式更易于区分。
    12.尽量使用简写形式的十六进制值，例如，用 #fff 代替 #ffffff。
    13.为选择器中的属性添加双引号，例如，input[type="text"]。只有在某些情况下是可选的，但是，为了代码的一致性，建议都加上双引号。
    14.避免为 0 值指定单位，例如，用 margin: 0; 代替 margin: 0px;。
3-书写顺序 由外到内
    位置：position,left,right,float
    盒模型属性：display,margin,padding,width,height
    边框与背景：border,background
    段落与文本：line-height,text-indent,font,color,text-decoration,...
    其他属性：overflow,cursor,visibility,...
4-css 需要显示所有值的情况下，应当尽量限制使用简写形式的属性声明。例如padding border 
    大部分情况下，我们不需要为简写形式的属性声明指定所有值。例如，HTML 的 heading 元素只需要设置上、下边距（margin）的值，因此，在必要的时候，只需覆盖这两个值就可以。过度使用简写形式的属性声明会导致代码混乱，并且会对属性值带来不必要的覆盖从而引起意外的副作用。
5-css命名在不冲突的前提下尽可能简洁 并且意义明确 基于最近的父 class 或基本（base） class 作为新 class 的前缀。 多人合作的项目在样式名前面加上自己的命名空间
6-css命名统一小写 多个单词之间用"_"进行连接（"_"符号不可以在首位）
    "-"在编辑器中可能有无法双击选中的问题 Sublime Text 中可以在 首选项->设置 中的 word_separators 里删除"-"解决
7-css尽可能不用id选择器 除非特殊情况
8-使用autoprefixer补全浏览器前缀 或者手动补全 并尽量垂直对齐
9-选择器层数尽可能不要过多 建议不要超过3层 尽量使用类选择器(class)，避免使用通配符选择器（*）​和属性选择器，后代选择器和子选择器也尽量避免
10-慎用 !important
11-上下模块之间的间距统一使用下一个模块的margin-top来实现，好处是：如果没有下一个模块也不会多出一段空隙。
12-列表也尽可能使用margin-top做间距 结合first-child选择器消除第一个子元素的margin-top
13-IE css兼容性手册 https://msdn.microsoft.com/en-us/library/hh781508%28v=vs.85%29.aspx#element_selectors
因为要兼容IE8 勿使用手册中IE8列中为No的写法 布局使用float 不要用table（层次太多性能不佳）或者flex（无法兼容）进行布局 横向间距尽可能使用margin-left 结合first-child选择器消除第一个子元素的margin-left

三 js
1-使用4空格缩进
2- 独立的方法尽可能使用IIFE（即时执行方法）
;(function ($, window, document, undefined) {  
    
})(jQuery, window, document);
3-不随意定义全局变量 各自使用自己的命名空间 例如我的命名空间为mk 所有定义的变量和函数都应该是mk这个全局对象的属性和方法
4-变量和方法名称尽可能简短并且意义明确 必要的情况下在后面添加注释
5-代码结尾必要时带上分号 防止代码压缩时报错 尤其是前后代码有括号时;
6-对于以逗号分隔的参数值，每个逗号后面都应该插入一个空格
7-花括号'{'不单独成行 并且在前面加一个空格
8-等号=及运算符号+-*/ 等前后加上空格
9-过长的数组、JSON和条件判断语句等 注意根据相应的分隔符进行换行处理 
    例如
    if (a == b
        && b == c
        || c == d
    ) {
    }
10-函数的return后面如果有值必须同行
11-js标识符不能是关键字、保留字、true、false、null。命名可以采用小驼峰式命名法,即第一个字母小写，后面每个有意义的首字母大写。 
12-var同时定义多个变量可以合并 但注意对齐
    例如
    var a = 1,
        b = 2,
        c = function() {
            return a + b;
        };
12-变量除了上面的要求 命名时最好带上所属类型 
    比如
    o代表object
    b代表boolean
    n代表number
    s代表string
    f代表function
    oDiv代表div对象
13-常量使用全都大写进行命名
14-构造函数 大驼峰式命名法 首字母大写
15-私有变量前缀为_ jquery对象前缀$
16-尽可能将代码中的可复用的纯函数剥离出来 提高代码复用率
17-不可复用代码或非重复性代码 例如假如banner的执行函数只在首页执行一次 可以通过script标签将执行函数直接写到banner所在标签的底部 方便迁移和修改
6-注释
    单行注释
    1.单行注释//(双斜线)与注释文字之间保留一个空格。
    2.在代码后面添加注释：//(双斜线)与代码之间保留一个空格，并且//(双斜线)与注释文字之间保留一个空格。
    3.注释代码：//(双斜线)与代码之间保留一个空格。
    多行注释
    1.若开始(/*)和结束(*/)都在一行，推荐采用单行注释。
    2.若至少三行注释时，第一行为/*，最后行为*/，其他行以*开始，并且注释文字与*保留一个空格。
    例如
    /*
    * 代码执行到这里后会调用setTitle()函数
    * setTitle()：设置title的值
    */
    setTitle();
    函数的注释
    例子
    /**
    * 合并Grid的行
    * @param grid {Ext.Grid.Panel} 需要合并的Grid
    * @param cols {Array} 需要合并列的Index(序号)数组；从0开始计数，序号也包含。
    * @param isAllSome {Boolean} ：是否2个tr的cols必须完成一样才能进行合并。true：完成一样；false(默认)：不完全一样
    * @return void
    * @author polk6 2015/07/21 
    * @example
    * _________________                             _________________
    * |  年龄 |  姓名 |                             |  年龄 |  姓名 |
    * -----------------      mergeCells(grid,[0])   -----------------
    * |  18   |  张三 |              =>             |       |  张三 |
    * -----------------                             -  18   ---------
    * |  18   |  王五 |                             |       |  王五 |
    * -----------------                             -----------------
    */
    function mergeCells(grid, cols, isAllSome) {
        // Do Something
    }

四 文件夹命名规范
img //图片资源
css //样式资源
js //脚本资源
font //字体图标

五 ui页面层级规范
从上至下
1.弹出层，作为内容层和导航层的补充，用于承载弹窗通知、操作菜单、菜单、成功或加载中等状态的Toast，表单报错提示等弹出内容。z-index > 999
2.蒙层，配合弹出层使用，用于锁定内容层和导航层操作，不单独使用。z-index = 999
3.导航层，位于内容层之上，在用户滑动内容层时可保持位置不动，通常用于承载导航栏等需要固定在页面的元素。500 < z-index < 999
4.内容层，承载页面主要内容。z-index < 500

五 布局使用栅格布局 具体见grid文件夹内例子

六 工具
1.电脑版幻灯片使用Swiper2 手机版使用Swiper3
2.使用lodash作为备用的JavaScript工具库
3.为了兼容IE8 jquery使用1.12.4的版本
4.内置$.imgAuto图片自适应方法
5.使用css3-mediaqueries作为ie8不支持media查询的解决方案